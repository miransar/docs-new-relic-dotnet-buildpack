---
title: Installing and Configuring New Relic Dotnet Extension Buildpack for VMware Tanzu
owner: Partners
---

This topic describes how to install and configure New Relic Dotnet Extension Buildpack for Pivotal
Cloud Foundry (VMware Tanzu).

You can either install the buildpacks as a tile in Ops Manager
or create them individually as separate buildpacks using <code>cf create-buildpack</code> command.


## <a id='install-opsmgr'></a> Install and Configure New Relic Dotnet Extension Buildpack for VMware Tanzu in Ops Manager

To install and configure using Ops Manager, do the following:

1. Download the latest version of the tile from [Pivotal Network](https://network.pivotal.io/products/new-relic-dotnet-buildpack) or the New Relic GitHub [releases](https://github.com/newrelic/newrelic-dotnet-buildpack-tile/releases).

1. To upload the product file, navigate to the **Installation Dashboard** in **Ops Manager** and click **Import a Product**.

1. To add the tile to your staging tile, click **"+"** sign.

1. Click the **New Relic Dotnet Extension Buildpack for VMware Tanzu** tile.

1. In the **"Assign AZs and Networking"** pane configure the availability zones and network

1. By default all 8 buildpacks are created. If you want to install the buildpacks selectively, do the following:
    1. Navigate to **Tile Configuration** > **New Relic Buildpack Selection** and select only the buildpacks that you wish to install.

    1. Click **Save** on each tab.

1. You can also set the positions of each buildpack in the **"Buildpack Settings"** pane

1. Navigate to **Installation Dashboard** and click **Review Pending Changes**.

1. Click **Apply Changes**.

## <a id='install-config'></a> Install and Configure New Relic Dotnet Extension Buildpack for VMware Tanzu via the cf CLI

If you do not want to install the tile, you can download the PIVOTAL file, and install and configure
only the buildpacks you need using the cf CLI.

### <a id='install'></a> Install via the cf CLI

To install using the cf CLI, do the following:

1. Download the latest version of the tile from [Pivotal Network](https://network.pivotal.io/products/new-relic-dotnet-buildpack) or the New Relic
GitHub [releases](https://github.com/newrelic/newrelic-dotnet-buildpack-tile/releases).

1. To unzip the PIVOTAL file into a separate subdirectory, run the following command:

    ```
    unzip new-relic-dotnet-buildpack-VERSION_NUMBER.pivotal -d buildpack_tile
    ```

1. To change the directory to <code>buildpack&#95;tile/releases</code>, run the following command:

    ```
    cd buildpack_tile/releases
    ```

1. To create a new subdirectory, run the following command:

    ```
    mkdir SUB-DIR
    ```

    Where `SUB-DIR` is the name of the subdirectory you want to create.

1. To extract the TGZ file in the releases folder into the `SUB-DIR` directory, run the following
command:

    ```
    tar xvf new-relic-dotnet-buildpack-tile-VERSION-NUMBER.tgz -C `SUB-DIR`
    ```

    Where `SUB-DIR` is the name of the subdirectory you created.

1. To change the directory to `SUB-DIR/package`, run the following command:

    ```
    cd SUB-DIR/packages
    ```

    Where `SUB-DIR` is the name of the subdirectory you created.

1. To extract any of the individual buildpack TGZ files, run the following command:

    ```
    tar xvf BUILDPACK-NAME.tgz
    ```

    Where `BUILDPACK-NAME` is the name of the buildpack you want to extract.

1. To upload the zipped buildpack, run the following command:

    ```
    cf create-buildpack BUILDPACK-NAME BUILDPACK-ZIP-FILE-PATH 99
    ```

    Where:

    + `BUILDPACK-NAME` is a decriptive name for the buildpack which you are about to upload.
    + `BUILDPACK-ZIP-FILE-PATH` is the path for the zipped buildpack.


### <a id='configure'></a> Configure via the cf CLI
The buildpacks in the downloaded tile are already built and ready to be used in Cloud Foundry.
To make changes to the buildpack or update the cached version of the buildpacks
with a newer (or a specific) version of New Relic agent, you can build a custom copy with the cf CLI and deploy it on Cloud Foundry.

#### <a id='build-deploy'></a> Build the Custom Buildpack

To build a custom copy of the buildpacks, do the following:

1. Clone the buildpack repo into your local environment:

      ```
      git clone https://github.com/newrelic/newrelic-dotnet-buildpack-tile.git
      cd ewrelic-dotnet-buildpack-tile
      ```

    1. If you want to clone the New Relic Dotnet Core Extension Buildpack, change directory to **"core-extension"**:

        ```
        cd core-extension
        ```

    1. If you want to clone New Relic HWC Extension Buildpack, change directory to **"hwc-extension"**:

        ```
        cd hwc-extension
        ```

1. To source the ENVRC file, run the following command:

    ```
    source .envrc
    ```

1. To install `buildpack-packager`, run the following command:

    ```
    ./scripts/install_tools.sh
    ```

1. To build the buildpack, run the following command:

    ```
    buildpack-packager build [ --cached ] -stack STACK_NAME
    ```
    Where **STACK** could be cflinuxfs3, windows, windows2016, windows2012R2

<br/>
#### <a id='deploy'></a> Deploy Your Application Using the Buildpack

To deploy the custom buildpack, do the following:

1. To upload your buildpack, run the following command:

    ```
    cf create-buildpack BUILDPACK-NAME BUILDPACK-ZIP-FILE-PATH 99
    ```

    Where:

    + `BUILDPACK-NAME` is the name of the buildpack you want to upload.
    + `BUILDPACK-ZIP-FILE-PATH` is the path for the zipped buildpack.

1. To deploy your application using New Relic extension buildpacks, run the following command:

    ```
    cf push YOUR-APP -b BUILDPACK-NAME-1  -b BUILDPACK-NAME-2
    ```

    Where:

     + `YOUR-APP` is the name of your application.
     + `BUILDPACK-NAME-1` is one of New Relic's extension buildpacks for Dotnet Core or Dotnet Framework (HWC).
     + `BUILDPACK-NAME-2` is the name of the standard buildpack (either Dotnet Core or HWC buildpack). <br> <br>

    Or you can use an application manifest and use **"buildpacks"** stanza with multiple buildpack names listed.

    <p class="note"><strong>Note:</strong> Because these are extension buildpacks,
       you must specify the main Cloud Foundry buildpack at the end of the chain.</p>
